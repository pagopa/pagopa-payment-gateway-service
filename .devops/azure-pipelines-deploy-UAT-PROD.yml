# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger: none
pr: none

parameters:
  - name: 'buildVersion'
    displayName: 'Build Version'
    type: string
  - name: 'env'
    displayName: 'Environment'
    type: string
    default: 'UAT'
    values:
      - 'UAT'
#      - 'PROD'

variables:
  vmImageNameDefault: 'ubuntu-latest'
  poolNameUAT: 'pm-agent-pool-uat'
  azureSubscriptionUAT: 'Pm-Subscription-uat'
  KeyVaultNameUAT: 'u87-kmn-pm-uat-pci'
#  poolNamePROD: 'pm-agent-pool-prod'
#  azureSubscriptionPROD: 'Pm-Subscription-prod'
#  KeyVaultNamePROD: 'u87-kmn-pm-prod-pci'
  definitionId: 113

stages:

  - stage: stage_check_prerequisites
    displayName: Check Prerequisites
    pool:
      vmImage: $(vmImageNameDefault)
    jobs:
      - job: job_check_version
        displayName: Check Version
        steps:
          - template: 'templates/verify-branch-version.yml'
            parameters:
              buildVersion: '${{parameters.buildVersion}}'
          - script: echo '${{parameters.buildVersion}}'
            displayName: Branch Version

#  - stage: stage_deploy_UAT_liquibase
#    displayName: Execute Deploy UAT - Liquibase
#    dependsOn:
#      - stage_check_prerequisites
#    condition: and(succeeded('stage_check_prerequisites'), ${{ eq(parameters.env, 'UAT') }})
#    jobs:
#      - template: templates/uat/upgrade_db.yml
#        parameters:
#          version: ${{ parameters.buildVersion }}
#          poolName: $(poolNameUAT)
#          azureSubscription: $(azureSubscriptionUAT)
#          KeyVaultName: $(KeyVaultNameUAT)
#          definitionId: $(definitionId)

  - stage: stage_deploy_UAT
    displayName: Execute Deploy UAT
    dependsOn:
      - stage_check_prerequisites
#      - stage_deploy_UAT_liquibase
#    condition: and(succeeded('stage_check_prerequisites'), and(succeeded('stage_deploy_UAT_liquibase'), ${{ eq(parameters.env, 'UAT') }}))
    condition: and(succeeded('stage_check_prerequisites'), ${{ eq(parameters.env, 'UAT') }})
    pool:
      name: $(poolNameUAT)
    jobs:
      - deployment: deploy_UAT
        displayName: Deploy UAT
        environment: 'UAT'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: Download Artifact
                  inputs:
                    source: 'specific'
                    project: 'PaymentManager'
                    pipeline: $(definitionId)
                    runVersion: 'latestFromBranch'
                    runBranch: 'refs/heads/releases/${{parameters.buildVersion}}'
                    allowPartiallySucceededBuilds: true
                    artifact: 'Build PTG ${{parameters.buildVersion}}'
                    path: '$(Pipeline.Workspace)'
                - template: 'templates/check-files.yml'
                  parameters:
                    buildVersion: '${{parameters.buildVersion}}'
                - task: AzureKeyVault@2
                  inputs:
                    azureSubscription: $(azureSubscriptionUAT)
                    KeyVaultName: $(KeyVaultNameUAT)
                    SecretsFilter: '*'
                    RunAsPreJob: false
                - template: 'templates/deploy-artifact-on-azure-appservice.yml'
                  parameters:
                    moduleName: 'PTG'
                    artifactType: 'WAR'
                    azureSubscription: $(azureSubscriptionUAT)
                    webAppName: '$(payment-gateway-appsrv-uat)'
                    workingDir: '$(Pipeline.Workspace)'
                    fileName: 'pagopa-payment-transactions-gateway-${{parameters.buildVersion}}.war'
                    deployToSlotOrASE: true
                    resourceGroupName: U87-PM-AppServices-pci-uat
                    slotName: release
                - task: PublishBuildArtifacts@1
                  displayName: Publish Artifact
                  inputs:
                    pathToPublish: '$(Pipeline.Workspace)/pagopa-payment-transactions-gateway-${{parameters.buildVersion}}.war'
                    artifactName: 'UAT - Deployed PTG ${{parameters.buildVersion}}'

#  - stage: stage_deploy_PROD_liquibase
#    displayName: Execute Deploy PROD - Liquibase
#    dependsOn:
#      - stage_check_prerequisites
#    condition: and(succeeded('stage_check_prerequisites'), ${{ eq(parameters.env, 'PROD') }})
#    jobs:
#      - template: templates/prod/upgrade_db.yml
#        parameters:
#          version: ${{parameters.buildVersion}}
#          poolName: $(poolNamePROD)
#          azureSubscription: $(azureSubscriptionPROD)
#          KeyVaultName: $(KeyVaultNamePROD)
#          definitionId: $(definitionId)
#
#  - stage: stage_deploy_PROD
#    displayName: Execute Deploy PROD
#    condition: ${{ eq(parameters.env, 'PROD') }}
#    pool:
#      name: $(poolNamePROD)
#    jobs:
#      - deployment: deploy_PROD
#        displayName: Deploy PROD
#        environment: 'PROD'
#        strategy:
#          runOnce:
#            deploy:
#              steps:
#                - task: DownloadPipelineArtifact@2
#                  displayName: Download Artifact
#                  inputs:
#                    source: 'specific'
#                    project: 'PaymentManager'
#                    pipeline: $(definitionId)
#                    runVersion: 'latestFromBranch'
#                    runBranch: 'refs/heads/releases/${{parameters.buildVersion}}'
#                    allowPartiallySucceededBuilds: true
#                    artifact: 'Build PTG ${{parameters.buildVersion}}'
#                    path: '$(Pipeline.Workspace)'
#                - template: 'templates/check-files.yml'
#                  parameters:
#                    buildVersion: '${{parameters.buildVersion}}'
#                - task: AzureKeyVault@2
#                  inputs:
#                    azureSubscription: $(azureSubscriptionPROD)
#                    KeyVaultName: $(KeyVaultNamePROD)
#                    SecretsFilter: '*'
#                    RunAsPreJob: false
#                - template: 'templates/deploy-artifact-on-azure-appservice.yml'
#                  parameters:
#                    moduleName: 'PTG'
#                    artifactType: 'WAR'
#                    azureSubscription: $(azureSubscriptionPROD)
#                    webAppName: '$(payment-gateway-appsrv-prod)'
#                    workingDir: '$(Pipeline.Workspace)'
#                    fileName: 'pagopa-payment-transactions-gateway-${{parameters.buildVersion}}.war'
#                    deployToSlotOrASE: true
#                    resourceGroupName: U87-PM-AppServices-pci-prod
#                    slotName: release
#                - task: PublishBuildArtifacts@1
#                  displayName: Publish Artifact
#                  inputs:
#                    pathToPublish: '$(Pipeline.Workspace)/pagopa-payment-transactions-gateway-${{parameters.buildVersion}}.war'
#                    artifactName: 'PROD - Deployed PTG ${{parameters.buildVersion}}'