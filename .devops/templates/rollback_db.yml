parameters:
  - name: version
  - name: poolName
  - name: azureSubscription
  - name: KeyVaultName
  - name: schemaName

jobs:
  - job: job_rollback_prep
    displayName: Rollback Preparation
    pool:
      name: ${{ parameters.poolName }}
    steps:
      - checkout: none

      - script: echo Rolling back to version ${{ parameters.version }}
        displayName: Echo Rollback Version

      - script: echo Rolling back schema ${{ parameters.schemaName }}
        displayName: Echo Rollback Schema

      - script: |
          echo "##vso[task.setvariable variable=ROLLBACK_SCHEMA;isOutput=true]${{ parameters.schemaName }}"
        displayName: "Setting ROLLBACK_SCHEMA Variable"
        name: setRollbackSchema

      - script: echo ROLLBACK_SCHEMA '$(setRollbackSchema.ROLLBACK_SCHEMA)'
        displayName: Echo Rollback Schema

  - job: job_rollback_rtd
    displayName: RTD_USER Rollback Execution
    pool:
      name: ${{ parameters.poolName }}
    condition: and(succeeded(), eq(dependencies.job_rollback_prep.outputs['setRollbackSchema.ROLLBACK_SCHEMA'], 'PGS'))
    dependsOn: job_rollback_prep
    steps:
      - checkout: none

      # PGS (PM)
      - template: ./liquibase-rollback.yml
        parameters:
          url: $(sit-db-pgs-url-simple)
          username: $(sit-db-pgs-username)
          password: $(sit-db-pgs-password)
          classpath: $(Pipeline.Workspace)/${{ parameters.version }}-liquibase-script/changelogs/payment-transaction-gateway
          liquibaseSchemaName: $(sit-db-pgs-schema)
          defaultSchemaName: $(sit-db-pgs-schema)
          schema: $(sit-db-pgs-schema)
          liquibaseTablespaceName: $(sit-db-pgs-tablespace)
          title: "Rollback DB PGS"
          databaseChangelogLockTableName: "DATABASECHANGELOGLOCK"
          databaseChangelogTableName: "DATABASECHANGELOG"
          version: ${{ parameters.version }}
          contexts: "tag,baseline,incremental"
          azureSubscription: ${{ parameters.azureSubscription }}
          KeyVaultName: ${{ parameters.KeyVaultName }}